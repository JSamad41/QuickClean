@model QuickClean.Models.Property

@{
    ViewBag.Title = string.Concat("Property Details", @Model.Title);
}

@if (!Model.User.IsAuthenticated)
{
    @Html.Partial("NotAuthenticated")
}
else
{
    string strHeader = ViewBag.Title;
    string strText = "To make changes to your listing enter your information below and click the Update button.";
    if (Model.ID == 0)
    {
        strHeader = "New Listing";
        strText = "Enter the information for this listing and click the Save button.";
    }

    <h2>@strHeader</h2>
    @Html.Partial("UserTabMenu")
    <p>@strText</p>
    if (Model.ActionType == QuickClean.Models.Property.ActionTypes.RequiredFieldsMissing)
    {
        <div id="content-locked">
            <i class="fad fa-exclamation-triangle fa-2x"></i>
            <span>Property clean date, description, and address are required.</span>
        </div>
    }

    using (Html.BeginForm("Property", "Profile", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        <input id="query-string-from" name="query-string-from" type="hidden" value="@Request.QueryString["from"]" />
        <div id="user-profile-image">
            @if (Model.PropertyImage != null)
            {
                if (Model.PropertyImage.ImageID > 0)
                {
                    <div class="user-profile-image-container">
                        <img class="user-profile-thumbnail" src="@string.Concat("data:Image/",
							Model.PropertyImage.FileExtension, ";base64,",
							Model.PropertyImage.BytesBase64)" />
                    </div>
                }
            }
        </div>
        <div id="user-profile-data">
            @Html.TextBoxFor(model => model.PropertyImage.ImageID, new { style = "display: none;" })

            <div class="section">
                <button class="button-action" id="btnUpdate2" name="btnSubmit" value="save"><i class='far fa-save'></i> Save</button>
                @if (Model.ID > 0)
                { //don't show the delete unless this Property has already been saved to the database
                    <button class="button-cancel" id="btnDelete2" name="btnSubmit" value="delete"><i class='far fa-trash-alt'></i> Delete</button>
                }
                <button class="button-cancel" id="btnClose2" name="btnSubmit" value="close"><i class='fa fa-times'></i> Close</button>
            </div>

            <div class="section">
                <div class="section">
                    <div>Property Image(s)</div>
                    <div>
                        <input class="profile-item" type="file" name="PropertyImage" id="PropertyImage" />
                    </div>
                </div>
            </div>
            <div class="item">
                <div>&nbsp;</div>
                <div>@Html.CheckBoxFor(model => model.IsActive) @Html.LabelFor(model => model.IsActive, "Is Active")</div>
            </div>
            <div class="section">
                <div class="item">
                    <div>@Html.LabelFor(model => model.Start, "Start Date")</div>
                    <div>@Html.TextBoxFor(model => model.Start, "{0:yyyy-MM-dd}", new { @class = "field-width3", @type = "date" })</div>
                </div>
                <div class="item">
                    <div>@Html.LabelFor(model => model.Start.TimeOfDay, "Start Time")</div>
                    <div>@Html.TextBoxFor(model => model.Start.TimeOfDay, new { @class = "field-width3", @type = "time" })</div>
                </div>
            </div>

            <div class="section">
                <div class="item">
                    <div>@Html.LabelFor(model => model.Location.Address.Address1)</div>
                    <div>@Html.TextBoxFor(model => model.Location.Address.Address1, new { @class = "field-width3" })</div>
                </div>
                <div class="item">
                    <div>@Html.LabelFor(model => model.Location.Address.Address2)</div>
                    <div>@Html.TextBoxFor(model => model.Location.Address.Address2, new { @class = "field-width3" })</div>
                </div>
            </div>
            <div class="section">
                <div class="item">
                    <div>@Html.LabelFor(model => model.Location.Address.City)</div>
                    <div>@Html.TextBoxFor(model => model.Location.Address.City, new { @class = "field-width4" })</div>
                </div>
                <div class="item">
                    <div>@Html.LabelFor(model => model.Location.Address.State)</div>
                    <div>@Html.TextBoxFor(model => model.Location.Address.State, new { @class = "field-width4" })</div>
                </div>
                <div class="item">
                    <div>@Html.LabelFor(model => model.Location.Address.Zip)</div>
                    <div>@Html.TextBoxFor(model => model.Location.Address.Zip, new { @class = "field-width4" })</div>
                </div>
            </div>

            <div class="section">
                <div class="item">

                    @{
                        List<SelectListItem> listItems = new List<SelectListItem>();

                        listItems.Add(new SelectListItem
                        {
                            Text = "Under 1,500",
                            Value = "75",
                            //Selected = true
                        });
                        listItems.Add(new SelectListItem
                        {
                            Text = "1,500 - 3,000",
                            Value = "100",
                        });
                        listItems.Add(new SelectListItem
                        {
                            Text = "3,000 - 4,000",
                            Value = "150"
                        });
                        listItems.Add(new SelectListItem
                        {
                            Text = "5,000 and Over",
                            Value = "200"
                        });
                    }

                    <div>@Html.LabelFor(model => model.squareFootage, "Sq. Footage")</div>
                    <div>@Html.DropDownListFor(model => model.squareFootage, listItems, "Select Sq. Footage", new { @name = "squareFootage", @id = "squareFootage", @class = "tot_amount" })</div>
                </div>
                <div class="item">
                    <div>@Html.LabelFor(model => model.numberOfBedrooms, "# of Bedrooms")</div>
                    <div>@Html.TextBoxFor(model => model.numberOfBedrooms, new { @class = "field-width4" })</div>
                </div>
                <div class="item">
                    <div>@Html.LabelFor(model => model.numberOfBathrooms, "# of Bathrooms")</div>
                    <div>@Html.TextBoxFor(model => model.numberOfBathrooms, new { @class = "field-width4" })</div>
                </div>
            </div>

            <div style="font-weight:bold">Type of Cleaning:</div>
            <div class="section">
                <div class="item">
                    <div>@Html.RadioButtonFor(model => model.standardCleaning, "true", new { @value = "true", @id = "standardCleaning", @name = "standardCleaning", @class = "tot_amount", @checked = "checked" })@Html.LabelFor(model => model.standardCleaning, "Standard Cleaning")</div>
                </div>
                <div class="item">
                    <div>@Html.RadioButtonFor(model => model.standardCleaning, "false", new { @value = "false", @id = "standardCleaning", @name = "standardCleaning", @class = "tot_amount" })@Html.LabelFor(model => model.standardCleaning, "Deep Cleaning")</div>
                </div>
            </div>

            <div style="font-weight:bold">Extras:</div>

            <div class="section">
                <div class="item">
                    <div>@Html.CheckBoxFor(model => model.carpetCleaning, new { @id = "carpetCleaning", @class = "tot_amount" })@Html.LabelFor(model => model.carpetCleaning, "Carpet Cleaning")</div>
                </div>
                <div class="item">
                    <div>@Html.CheckBoxFor(model => model.baseboardCleaning, new { @id = "baseboardCleaning", @class = "tot_amount" })@Html.LabelFor(model => model.baseboardCleaning, "Baseboard Cleaning")</div>
                </div>
                <div class="item">
                    <div>@Html.CheckBoxFor(model => model.laundryCleaning, new { @id = "laundryCleaning", @class = "tot_amount" })@Html.LabelFor(model => model.laundryCleaning, "Laundry Cleaning")</div>
                </div>
                <div class="item">
                    <div>@Html.CheckBoxFor(model => model.dishCleaning, new { @id = "dishCleaning", @class = "tot_amount" })@Html.LabelFor(model => model.dishCleaning, "Dish Cleaning")</div>
                </div>
            </div>

            <div class="section">
                <div class="item">
                    <div>@Html.LabelFor(model => model.Details)</div>
                    <div>@Html.TextAreaFor(model => model.Details, new { @class = "field-width1", @rows = "4" })</div>
                </div>
            </div>

            <div class="section">
                <div class="item">
                    <div style="font-weight:bold">@Html.LabelFor(model => model.Compensation, "Grand Total")</div>
                    <div>$ @Html.TextBoxFor(model => model.Compensation, new { @size = "7", @id = "compensation" })</div>
                </div>
            </div>

            <div class="section">
                <button class="button-action" id="btnUpdate" name="btnSubmit" value="save"><i class='far fa-save'></i> Save</button>
                @if (Model.ID > 0)
                { //don't show the delete unless this Property has already been saved to the database
                    <button class="button-cancel" id="btnDelete" name="btnSubmit" value="delete"><i class='far fa-trash-alt'></i> Delete</button>
                }
                <button class="button-cancel" id="btnClose" name="btnSubmit" value="close"><i class='fa fa-times'></i> Close</button>
            </div>

            <div class="section">
                <button class="button-action" id="btnUpdate" name="btnSubmit" value="pay"><i class='fa fa-money'></i> Click Here To Pay </button>             
            </div>
        </div>
    }
}





<script>
    function getTotal(objSelector) {
        var total = 0;
        var sqF = parseInt($('#squareFootage').val());
        var cleanType = $('#standardCleaning:checked').val();
        var carpet = $("#carpetCleaning").is(":checked") ? "true" : "false";
        var baseboard = $("#baseboardCleaning").is(":checked") ? "true" : "false";
        var laundry = $("#laundryCleaning").is(":checked") ? "true" : "false";
        var dish = $("#dishCleaning").is(":checked") ? "true" : "false";

        switch (sqF) {
            case 75:
                switch (cleanType) {
                    case "true":
                        if (carpet == "true") {
                            sqF = sqF + 50;
                        }
                        if (baseboard == "true") {
                            sqF = sqF + 25;
                        }
                        if (laundry == "true") {
                            sqF = sqF + 25;
                        }
                        if (dish == "true") {
                            sqF = sqF + 25;
                        }
                        total = sqF;
                        break;
                    case "false":
                        if (carpet == "true") {
                            sqF = sqF + 50;
                        }
                        if (baseboard == "true") {
                            sqF = sqF + 25;
                        }
                        if (laundry == "true") {
                            sqF = sqF + 25;
                        }
                        if (dish == "true") {
                            sqF = sqF + 25;
                        }
                        total = sqF + 50;
                        break;
                }
                break;
            case 100:
                switch (cleanType) {
                    case "true":
                        if (carpet == "true") {
                            sqF = sqF + 75;
                        }
                        if (baseboard == "true") {
                            sqF = sqF + 50;
                        }
                        if (laundry == "true") {
                            sqF = sqF + 50;
                        }
                        if (dish == "true") {
                            sqF = sqF + 50;
                        }
                        total = sqF;
                        break;
                    case "false":
                        if (carpet == "true") {
                            sqF = sqF + 75;
                        }
                        if (baseboard == "true") {
                            sqF = sqF + 50;
                        }
                        if (laundry == "true") {
                            sqF = sqF + 50;
                        }
                        if (dish == "true") {
                            sqF = sqF + 50;
                        }
                        total = sqF + 50;
                        break;
                }
                break;
            case 150:
                switch (cleanType) {
                    case "true":
                        if (carpet == "true") {
                            sqF = sqF + 100;
                        }
                        if (baseboard == "true") {
                            sqF = sqF + 75;
                        }
                        if (laundry == "true") {
                            sqF = sqF + 75;
                        }
                        if (dish == "true") {
                            sqF = sqF + 75;
                        }
                        total = sqF;
                        break;
                    case "false":
                        if (carpet == "true") {
                            sqF = sqF + 100;
                        }
                        if (baseboard == "true") {
                            sqF = sqF + 75;
                        }
                        if (laundry == "true") {
                            sqF = sqF + 75;
                        }
                        if (dish == "true") {
                            sqF = sqF + 75;
                        }
                        total = sqF + 75;
                        break;
                }
                break;
            case 200:
                switch (cleanType) {
                    case "true":
                        if (carpet == "true") {
                            sqF = sqF + 125;
                        }
                        if (baseboard == "true") {
                            sqF = sqF + 100;
                        }
                        if (laundry == "true") {
                            sqF = sqF + 100;
                        }
                        if (dish == "true") {
                            sqF = sqF + 100;
                        }
                        total = sqF;
                        break;
                    case "false":
                        if (carpet == "true") {
                            sqF = sqF + 125;
                        }
                        if (baseboard == "true") {
                            sqF = sqF + 100;
                        }
                        if (laundry == "true") {
                            sqF = sqF + 100;
                        }
                        if (dish == "true") {
                            sqF = sqF + 100;
                        }
                        total = sqF + 100;
                        break;
                }
                break;
        }
        //$('#total1').val(total);
        $("#compensation").val(total);
    }
    $(document).ready(function () {
        getTotal($(".tot_amount"));
        $(".tot_amount").change(function (event) {
            getTotal($(".tot_amount:checked"));
        });

    });

    $(document).ready(function () {
        SetActiveMenus('profile', 'properties');
    });

</script>
